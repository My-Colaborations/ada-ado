dnl Autoconf configure script for Ada Database Objects
dnl Copyright (C) 2010, 2011, 2012, 2013 Stephane Carrez
dnl Written by Stephane Carrez (Stephane.Carrez@gmail.com)
dnl
dnl  Licensed under the Apache License, Version 2.0 (the "License");
dnl  you may not use this file except in compliance with the License.
dnl  You may obtain a copy of the License at
dnl
dnl     http://www.apache.org/licenses/LICENSE-2.0
dnl
dnl  Unless required by applicable law or agreed to in writing, software
dnl  distributed under the License is distributed on an "AS IS" BASIS,
dnl  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
dnl  See the License for the specific language governing permissions and
dnl  limitations under the License.
dnl 

dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/ado.ads)

AC_CANONICAL_SYSTEM
dnl AM_MAINTAINER_MODE

# Current release settings
ADO_MAJOR_VERSION=1
ADO_MINOR_VERSION=0
ADO_MICRO_VERSION=0
ADO_VERSION=$ADO_MAJOR_VERSION.$ADO_MINOR_VERSION.$ADO_MICRO_VERSION

# checking for local tools
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_LN_S

AC_SUBST(ADO_VERSION)
AC_SUBST(ADO_MAJOR_VERSION)
AC_SUBST(ADO_MINOR_VERSION)
AC_SUBST(ADO_MICRO_VERSION)

EXEC_PREFIX="$prefix"
AC_SUBST(EXEC_PREFIX)

ADO_LIBDIR="lib"
AC_SUBST(ADO_LIBDIR)

AC_MSG_CHECKING([number of processors])
NR_CPUS=`getconf _NPROCESSORS_CONF 2>/dev/null || getconf NPROCESSORS_CONF 2>/dev/null || echo 1`
AC_MSG_RESULT($NR_CPUS)
AC_SUBST(NR_CPUS)

ADO_USE_GPRBUILD=no
AC_ARG_WITH(gprbuild,
AS_HELP_STRING([--with-gprbuild], [Use gprbuild instead of gnatmake for the compilation]),
[
  ADO_USE_GPRBUILD=${withval}
])
case "$ADO_USE_GPRBUILD" in
  yes)
    AC_CHECK_PROGS(GNATMAKE, gprbuild, "")
    AC_CHECK_PROGS(GNATCLEAN, gprclean, "")
	;;

  *)
	AC_CHECK_PROGS(GNATMAKE, gnatmake, "")
	AC_CHECK_PROGS(GNATCLEAN, gnatclean, "")
   ;;
esac


AC_ARG_ENABLE(mysql,
[  --enable-mysql          build MySQL support],
ENABLE_MYSQL=$enableval,
ENABLE_MYSQL=yes)

AC_ARG_ENABLE(sqlite,
[  --enable-sqlite         build SQLite support],
ENABLE_SQLITE=$enableval,
ENABLE_SQLITE=yes)

DB=""
WITH_ADO_MYSQL=""
ADO_HAVE_MYSQL=no

##########################################
# MySQL support
##########################################

ac_mysql_config=mysql_config
AC_MSG_CHECKING([MySQL configuration])
AC_ARG_WITH(mysql,
AS_HELP_STRING([--with-mysql=ARG], [Use the MySQL configuration tool (mysql_config)]),
[
  ac_mysql_config=${withval}
],
[
])
AC_MSG_RESULT(${ac_mysql_config})

ac_mysql_libs=`$ac_mysql_config --libs 2>/dev/null`

if test "${ENABLE_MYSQL}" = "yes" ; then
  case "${host}" in
  ## On Windows, the MySQL library name is libmysql
  *mingw* )
    MYSQL_LIB=mysql

    AC_CHECK_PROGS(MYSQL, mysql)
    if test "X$MYSQL" != "X" ; then
       DB="$DB mysql"
       ADO_HAVE_MYSQL=yes
	   WITH_ADO_MYSQL="with \"ado_mysql\";";
       MYSQL_LIBNAME="$MYSQL_LIB"
    fi
    ;;

  *)
    MYSQL_LIB=mysqlclient
    LDFLAGS="$LDFLAGS $ac_mysql_libs"
    AC_CHECK_LIB($MYSQL_LIB,mysql_init,[
       DB="$DB mysql"
       ADO_HAVE_MYSQL=yes
	   WITH_ADO_MYSQL="with \"ado_mysql\";";
       MYSQL_LIBNAME="$ac_mysql_libs"
       ])
    ;;

  esac
fi

WITH_ADO_SQLITE=""
ADO_HAVE_SQLITE=no
if test "${ENABLE_SQLITE}" = "yes" ; then
  AC_CHECK_LIB(sqlite3,sqlite3_open,[
    DB="$DB sqlite"
    ADO_HAVE_SQLITE=yes
	WITH_ADO_SQLITE="with \"ado_sqlite\";";
  ])
fi



ADO_TESTS_HARNESS=''
ADO_TESTS_SRC_DIR=''
ADO_DATABASES_SRC_DIR=''
if test -z "$DB"; then
  echo "configure: Warning: no database supported."
  echo "configure: Warning: try to install mysql or sqlite development libraries"
else
  ADO_DATABASES_SRC_DIR=
  for i in $DB; do
    ADO_DATABASES_SRC_DIR="$ADO_DATABASES_SRC_DIR, \"src/$i\""
    ADO_TESTS_SRC_DIR="$ADO_TESTS_SRC_DIR, \"regtests/$i\""
    if test ! -z "$ADO_TESTS_HARNESS"; then
       ADO_TESTS_HARNESS="$ADO_TESTS_HARNESS, "
    fi
    ADO_TESTS_HARNESS="$ADO_TESTS_HARNESS \"ado_${i}_harness\""
  done
fi

AC_SUBST(ADO_DATABASES_SRC_DIR)
AC_SUBST(ADO_TESTS_SRC_DIR)
AC_SUBST(ADO_TESTS_HARNESS)
AC_SUBST(ADO_HAVE_MYSQL)
AC_SUBST(ADO_HAVE_SQLITE)
AC_SUBST(MYSQL_LIBNAME)
AC_SUBST(WITH_ADO_MYSQL)
AC_SUBST(WITH_ADO_SQLITE)

##########################################
# Check to enable/disable shared library
##########################################

AC_MSG_CHECKING([shared library support])
ac_enable_shared=no
AC_ARG_ENABLE(shared,
[  --enable-shared         Enable the shared libraries (disabled)],
[case "${enableval}" in
  no|none)  ac_enable_shared=no ;;
  *)        ac_enable_shared=yes ;;
esac])dnl

AC_MSG_RESULT(${ac_enable_shared})
BUILDS_SHARED=$ac_enable_shared
AC_SUBST(BUILDS_SHARED)

##########################################
# Ada Util library
##########################################

AC_MSG_CHECKING([Ada Utility library (code.google.com/p/ada-util)])
AC_ARG_WITH(ada-util,
AS_HELP_STRING([--with-ada-util=x], [Path for the Ada Utility library (code.google.com/p/ada-util)]),
[
  UTIL_DIR=${withval}/
],
[
  echo "with \"util\"; project t is for Source_Dirs use (); end t;" > t.gpr
  gnatmake -p -Pt >/dev/null 2>/dev/null
  if test $? -eq 0; then
    UTIL_DIR=
  else
    UTIL_DIR=../util/
  fi;
  rm -f t.gpr
])

echo "with \"${UTIL_DIR}util\"; project t is for Source_Dirs use (); end t;" > t.gpr
gnatmake -p -Pt >/dev/null 2>/dev/null
if test $? -ne 0 ; then
   rm -f t.gpr
   AC_MSG_ERROR([Ada Utility library not found in ${UTIL_DIR}])
fi
rm -f t.gpr
AC_MSG_RESULT(ok ${UTIL_DIR})
AC_SUBST(UTIL_DIR)

AC_OUTPUT(
Makefile ado.gpr ado_core.gpr tests.gpr samples.gpr distrib/ado.gpr distrib/ado_core.gpr ado_mysql.gpr ado_sqlite.gpr
)
